{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/MenuComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/ConatctComponent.js","components/AboutComponent.js","components/DishdetailComponent.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersFailed","Header","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","evt","alert","username","value","password","remember","checked","prevntDefault","dark","expand","onClick","href","height","width","isOpen","navbar","to","outline","toggle","onSubmit","htmlFor","type","id","innerRef","input","check","color","Component","Footer","RenderMenuItem","Menu","menu","dishes","map","key","active","addComment","comment","payload","dishesFailed","errormsg","addDishes","commentsFailed","errmess","addComments","comments","promosLoading","promosFailed","addPromos","promos","addLeaders","leaders","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","postFeedbackform","dishId","firstname","lastname","email","agree","contactType","message","JSON","stringify","resetFeedbackForm","role","model","md","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","RenderLeader","tag","left","middle","object","body","About","title","list","RenderDish","top","CommentForm","handleComment","postComment","rating","author","RenderComments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","errorMsg","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","console","log","actions","reset","phone","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","telnum","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc67723e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = ()=>{\r\n    return(\r\n     <div className = \"col-12\">\r\n         <span className = \"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n         <p>Loading ...</p>\r\n     </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport {Loading} from './LoadingComponent';   \r\nimport { baseUrl } from '../shared/baseUrl'; \r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    } else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    } else {\r\n        return (\r\n            <FadeTransform\r\n            in\r\n            transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n\r\n            <Card>\r\n                 <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                    <CardText>{item.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                   \r\n                    <RenderCard item={props.dish} \r\n                    isLoading={props.dishesLoading} \r\n                    errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}  isLoading={props.leadersLoading} errMess={props.leadersFailed} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Home;","import React , {Component} from 'react';\r\nimport { Navbar, NavbarBrand,Nav,NavbarToggler ,Collapse,\r\n    NavItem,Jumbotron,Button,Modal,ModalHeader,ModalBody, Form,FormGroup, Label, Input } from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\nclass Header extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen : false,\r\n            isModalOpen:false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n        isNavOpen : !this.state.isNavOpen //toggling isNavOpen with the toggleNaV function\r\n        });\r\n    }\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen //toggling isModalOpen with the toggleNaV function\r\n            });\r\n    }\r\n    handleLogin(evt){\r\n    this.toggleModal();\r\n    alert(\"Username : \"+ this.username.value + \"Passsword: \"+ this.password.value + \"Remember: \"+ this.remember.checked);\r\n    evt.prevntDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <Navbar dark expand = \"md\">\r\n          <div className=\"container\">\r\n              <NavbarToggler onClick = {this.toggleNav} />\r\n            <NavbarBrand className = \"mr-auto\" href=\"/\" >\r\n                <img src = \"assets/images/logo.png\" height = \"30\" width = \"41\" alt = \"Ristorante Con Fusion\" />\r\n            </NavbarBrand>\r\n            <Collapse isOpen = {this.state.isNavOpen} navbar>\r\n            <Nav navbar>\r\n                <NavItem>\r\n                    <NavLink className = \"nav-link\" to = \"/home\">\r\n                        <span className = \"fa fa-home fa-lg\"></span> Home\r\n                    </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink className = \"nav-link\" to = \"/aboutus\">\r\n                        <span className = \"fa fa-info fa-lg\"></span> About us\r\n                    </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink className = \"nav-link\" to = \"/menu\">\r\n                        <span className = \"fa fa-list fa-lg\"></span> Menu\r\n                    </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink className = \"nav-link\" to = \"/contactus\">\r\n                        <span className = \"fa fa-address-card fa-lg\"></span> Contact Us\r\n                    </NavLink>\r\n                </NavItem>\r\n            </Nav>\r\n            <Nav className = \"ml-auto\" navbar>\r\n                <NavItem>\r\n                    <Button outline onClick = {this.toggleModal} >\r\n                        <span className = \"fa fa-sign-in fa-lg\">Login</span>\r\n                    </Button>\r\n                </NavItem>\r\n            </Nav>\r\n            </Collapse>\r\n          </div>\r\n        </Navbar>\r\n        <Jumbotron>\r\n        <div className=\"container\"> \r\n        <div className = \"row row-header\">\r\n            <div className = \"col-12 col-sm-6\">\r\n                <h1>Ristorante Con Fusion</h1>\r\n                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. \r\n                    Our lipsmacking creations will tickle your culinary senses!</p>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </Jumbotron>\r\n        <Modal isOpen = {this.state.isModalOpen} toggle={this.toggleModal}>\r\n            <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n            <ModalBody>\r\n            <Form onSubmit = {this.handleLogin}>\r\n                <FormGroup>\r\n                    <Label htmlFor = \"üsername\">Username</Label>\r\n                    <Input type = \"text\" id = \"username\" name = \"username\" \r\n                    innerRef = {(input)=>this.username = input}/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label htmlFor = \"password\">Password</Label>\r\n                    <Input type = \"password\" id = \"password\" name = \"password\" \r\n                    innerRef = {(input)=>this.password = input}/>\r\n                </FormGroup>\r\n                <FormGroup check>\r\n                    <Label check>\r\n                        <Input type = \"checkbox\" name = \"remember\" \r\n                    innerRef = {(input)=>this.remember = input}/>\r\n                        Remember me\r\n                    </Label>\r\n                </FormGroup>\r\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n            </Form>\r\n            </ModalBody>\r\n        </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to = \"/home\">Home</Link></li>\r\n                        <li><Link to = \"/aboutus\">About us</Link></li>\r\n                        <li><Link to = \"/menu\">Menu</Link></li>\r\n                        <li><Link to = \"/contactus\">Contact Us </Link> </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Card , CardImg,CardImgOverlay,CardTitle, Breadcrumb,BreadcrumbItem} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Loading} from './LoadingComponent';  \r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem({dish}){\r\n  return(\r\n    <Card >\r\n      <Link to = {`/menu/${dish.id}`}>\r\n      <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n\r\n    <CardImgOverlay>\r\n    <CardTitle>{dish.name}</CardTitle>\r\n    </CardImgOverlay>\r\n    </Link>\r\n    </Card>\r\n  );\r\n}\r\n      const Menu = (props) =>{\r\n      \r\n        const menu = props.dishes.dishes.map((dish) => {\r\n          return (\r\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\"> \r\n             <RenderMenuItem dish = {dish} />\r\n            </div>\r\n          );\r\n      });\r\n      if(props.dishes.isLoading){\r\n        return(\r\n          <div className = \"container\">\r\n              <div className = \"row\">\r\n                  <Loading />\r\n              </div>\r\n          </div>\r\n    );\r\n  } else if (props.dishes.errMess) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <h4>{props.dishes.errMess}</h4>\r\n            </div>\r\n        </div>\r\n   );     \r\n  } else {\r\n      return (\r\n          <div className=\"container\">\r\n              <div className=\"row\">\r\n                  <Breadcrumb>\r\n                      <BreadcrumbItem>\r\n                          <Link to=\"/home\">Home</Link>\r\n                      </BreadcrumbItem>\r\n                      <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                  </Breadcrumb>\r\n                  <div className=\"col-12\">\r\n                      <h3>Menu</h3>\r\n                      <hr />\r\n                  </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                  {menu}\r\n              </div>\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\n\r\nexport default Menu;\r\n\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = ( comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) =>(dispatch)=>{\r\n      const newComment = {\r\n        \r\n            dishId: dishId,\r\n            rating: rating,\r\n            author: author,\r\n            comment: comment\r\n        \r\n      }\r\n      newComment.date = new Date().toISOString();\r\n      return fetch(baseUrl + 'comments',{\r\n          method: 'POST',\r\n          body:JSON.stringify(newComment),\r\n          headers:{\r\n              'Content-Type': 'application/json'\r\n          },\r\n          credentials: 'same-origin'\r\n\r\n      }).then(response =>{\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var error = new Error(`Error is code: ${response.status} with message ${response.statusText}`);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },error =>{\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response=>dispatch(addComment(response)))\r\n    .catch(error => {console.log(`Post comment error message : ${error.message}`);\r\n                     alert(`Post comment error message : ${error.message}`);})\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response =>{\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var error = new Error(`Error is code: ${response.status} with message ${response.statusText}`);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },error =>{\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errormsg) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errormsg\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response =>{\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var error = new Error(`Error is code: ${response.status} with message ${response.statusText}`);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },error =>{\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response =>{\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var error = new Error(`Error is code: ${response.status} with message ${response.statusText}`);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },error =>{\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n//FETCHING LEADERS FROM SERVER\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    \r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response =>{\r\n        if(response.ok){\r\n            return response;\r\n        }\r\n        else{\r\n            var error = new Error(`Error is code: ${response.status} with message ${response.statusText}`);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },error =>{\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\n//posting feedback data\r\n\r\nexport const postFeedbackform = (firstname, lastname, phone, email, agree, contactType, message) => (dispatch) => {\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        phone: phone,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message,\r\n    }\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error(`Error is code: ${response.status} with message ${response.statusText}`);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        }, error => {\r\n            let errormsg = new Error(error.message);\r\n            throw errormsg;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => {console.log('Post feedback ' , error.message)\r\n            alert(`Sorry feedback post error ${error.message}`)\r\n        })\r\n\r\n    };","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React ,{Component}from 'react';\r\nimport {Breadcrumb,BreadcrumbItem,Button,Label,Col,Row} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Control,Form,Errors} from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <=len);\r\nconst minLength = (len) => (val) => (val) && (val.length >=len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component{\r\n    constructor(props){\r\n        super(props);\r\n      \r\n         this.handleSubmit = this.handleSubmit.bind(this); //binding handle submit to constructor for making it available for use\r\n      \r\n    }\r\n   \r\n    handleSubmit(values){\r\n        this.props.postFeedbackform(this.props.dishId, values.firstname, values.lastname, values.email, values.agree, values.contactType, values.message);\r\n        alert(\"See the values of your feedback: \" + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n       \r\n    }\r\n\r\n    \r\n    \r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"container\">\r\n    \r\n             <div className = \"row\">\r\n                <Breadcrumb>\r\n                <BreadcrumbItem><Link to = \"/home\">Home</Link></BreadcrumbItem>\r\n                <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className = \"col-12\">\r\n                  <h3>Contact Us</h3>\r\n                  <hr />\r\n                </div>\r\n              </div>\r\n    \r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className = \"col-12\">\r\n                        <h3>Send US Your Feedback</h3>\r\n                    </div>\r\n                    <div className = \"col-12 col-md-9\">\r\n                        <Form model = \"feedback\" onSubmit={(values)=>this.handleSubmit(values)}>\r\n                               <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                         \r\n                            < Row className = \"form-group\">\r\n                                <Col md = {{size:6,offset:2}}>\r\n                                    <div className =\" form-check\">\r\n                                    <Label check>\r\n                                        <Control.checkbox model = \".agree\" name = \"agree\" \r\n                                          className = \"form-check-input\"\r\n                                        /> {' '}\r\n                                        <strong>May we contact you ?</strong>\r\n                                    </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md = {{size:3,offset:1}}>\r\n                                <Control.select model = \".contactType\" name = \"contactType\" \r\n                                className = \"form-control\" >\r\n                                    <option>Tel.</option>\r\n                                    <option>Email</option>\r\n                                    \r\n                                    </Control.select> \r\n                                </Col>\r\n                                </ Row>\r\n                            < Row className = \"form-group\">\r\n                                <Label htmlFor = \"feedback\" md = {2}>\r\n                                   Your Feedback\r\n                                </Label>\r\n                                <Col md = {10}>\r\n                                    <Control.textarea model = \".message\" id =\"message\" name = \"message\"\r\n                                    rows=\"12\" \r\n                                    className = \"form-control\" />\r\n                                    </Col>\r\n                                    </ Row>\r\n                                    < Row className = \"form-group\">\r\n                                        <Col md = {{size:10,offset:2}}>\r\n                                            <Button type = \"submit\" color = \"primary\">\r\n                                                Send Feedback\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </ Row>\r\n                            </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { baseUrl } from '../shared/baseUrl'; \r\nimport { Loading } from './LoadingComponent';\r\nimport { Stagger, Fade } from 'react-animation-components';\r\n\r\nfunction RenderLeader({leader}) {\r\n    return (\r\n       \r\n        <Fade in>\r\n            <div className=\"col-12 mt-2\">\r\n                <Media tag=\"li\">\r\n                    <Media left middle>\r\n                        <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                    </Media>\r\n                    <Media body className=\"ml-4\">\r\n                        <h4>{leader.name}</h4>\r\n                        <p>{leader.designation}</p>\r\n                        <p>{leader.description}</p>\r\n                    </Media>\r\n                </Media>\r\n            </div>\r\n        </Fade>\r\n    );\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <RenderLeader leader={leader} key={leader.id} />\r\n        );\r\n    });\r\n\r\n    if (props.leaders.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (props.leaders.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.leaders.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );     \r\n    } else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>About</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>About</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <h2>Our History</h2>\r\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5\">\r\n                        <Card>\r\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                            <CardBody>\r\n                                <dl className=\"row p-1\">\r\n                                    <dt className=\"col-6\">Started</dt>\r\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                    <dd className=\"col-6\">$1,250,375</dd>\r\n                                    <dt className=\"col-6\">Employees</dt>\r\n                                    <dd className=\"col-6\">40</dd>\r\n                                </dl>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Card>\r\n                            <CardBody className=\"bg-faded\">\r\n                                <blockquote className=\"blockquote\">\r\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                        I'm not hungry enough to eat six.</p>\r\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                        P. Pepe, Diversion Books, 2014</cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Corporate Leadership</h2>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Stagger in>\r\n                            <Media list>\r\n                                {leaders}\r\n                            </Media>\r\n                        </Stagger>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About; ","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardBody, CardTitle, CardText, Breadcrumb, BreadcrumbItem, Button, Label, Row, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport {Loading} from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderDish({ dish }) {\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n             <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n            <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n        </div>\r\n       \r\n    );\r\n}\r\nconst required = (value) => value && value.length;\r\nconst maxLength = (length) => (value) => !(value) || (value.length <= length);\r\nconst minLength = (length) => (value) => (value) && (value.length >= length);\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleComment = this.handleComment.bind(this);\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleComment(values) {\r\n        this.toggleModal();\r\n        // alert(\"Comment submitted! Current state is: \" + JSON.stringify(values));\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button outline onClick={this.toggleModal}><i className=\"fa fa-pencil fa-lg\"></i> Submit comment</Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={this.handleComment} className=\"container\">\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\">Rating</Label>\r\n                                <Control.select model=\".rating\" className=\"form-control\" id=\"rating\" name=\"rating\"\r\n                                    validators={{ required }} >\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                    <option value=\"5\">5</option>\r\n                                </Control.select>\r\n                                <Errors className=\"text-danger\" model=\".rating\" show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required '\r\n                                    }} />\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\">Name</Label>\r\n                                <Control.text model=\".author\" className=\"form-control\" id=\"author\" name=\"author\" placeholder=\"Your name\"\r\n                                    validators={{ required, minLength: minLength(3), maxLength: maxLength(15) }} />\r\n                                <Errors className=\"text-danger\" model=\".author\" show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required ',\r\n                                        minLength: 'Must be greater than 2 characters ',\r\n                                        maxLength: 'Must be 15 characters or less '\r\n                                    }} />\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\">Comment</Label>\r\n                                <Control.textarea rows={6} model=\".comment\" className=\"form-control\" id=\"comment\" name=\"comment\" placeholder=\"Your comment\"\r\n                                    validators={{ required, minLength: minLength(3) }} />\r\n                                <Errors className=\"text-danger\" model=\".comment\" show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required ',\r\n                                        minLength: 'Must be greater than 2 characters '\r\n                                    }} />\r\n                            </Row>\r\n                            <Row>\r\n                                <Button type=\"submit\" className=\"bg-primary\">Submit</Button>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n// function RenderComments({ comments }) {\r\nfunction RenderComments({comments, postComment, dishId}) {\r\n    if (comments != null) {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in >\r\n                    {comments.map((comment) => {\r\n                        return (\r\n                            <Fade in>\r\n                            <li>\r\n                                <p>\"{comment.comment}\"</p>\r\n                                <p>~ {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\r\n                            </li>\r\n                            </Fade>\r\n                        );\r\n                    })}\r\n                    </Stagger>\r\n                </ul>\r\n                \r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\nconst DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (props.errorMsg) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );     \r\n    } else if (props.dish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to=\"/menu\">Menu</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />\r\n                  \r\n                    <RenderComments comments={props.comments} postComment={props.postComment} dishId={props.dish.id} />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\nexport default DishDetail;","import React ,{ Component }  from 'react';\r\nimport Home from './HomeComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Menu from './MenuComponent';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos ,fetchLeaders,postFeedbackform} from '../redux/ActionCreators';\r\nimport Contact from './ConatctComponent';\r\nimport About from './AboutComponent';\r\nimport {Switch,Route,Redirect,withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport DishDetail from './DishdetailComponent';\r\nimport {actions} from 'react-redux-form';\r\nimport {TransitionGroup,CSSTransition} from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return{\r\n    dishes:state.dishes,\r\n    comments:state.comments,\r\n    promotions:state.promotions,\r\n    leaders:state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => {dispatch(fetchDishes())},\r\n  resetFeedbackForm:()=>{dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => {dispatch(fetchLeaders())},\r\n  postFeedbackform : (firstname, lastname, phone, email, agree, contactType, message) => dispatch(postFeedbackform(firstname, lastname, phone, email, agree, contactType, message))}\r\n);\r\n\r\nclass Main extends Component {\r\n\r\n  \r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n}\r\n \r\nrender() {\r\n  const HomePage = () => {\r\n    return(\r\n      <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n      dishesLoading={this.props.dishes.isLoading}\r\n      dishesErrMess={this.props.dishes.errMess}\r\n      promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n              promoLoading={this.props.promotions.isLoading}\r\n              promoErrMess={this.props.promotions.errMess}\r\n     \r\n        leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n        leadersLoading={this.props.leaders.isLoading}\r\n        leadersFailed={this.props.leaders.errMess}\r\n      />\r\n    );\r\n  }\r\n\r\n  const DishWithId = ({match}) =>{\r\n   return(\r\n    <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n    isLoading={this.props.dishes.isLoading}\r\n    errMess={this.props.dishes.errMess}   \r\n    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n            commentsErrMess={this.props.comments.errMess}\r\n            postComment={this.props.postComment}\r\n/>\r\n   );\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <TransitionGroup>\r\n        <CSSTransition key={this.props.location.key} classNames = \"page\" timeout = {300}>\r\n           <Switch>\r\n              <Route path='/home' component={HomePage} />\r\n              <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path = \"/menu/:dishId\" component = {DishWithId} />\r\n              <Route path='/contactus' component={() => <Contact resetFeedbackForm = {this.props.resetFeedbackForm} postFeedbackform={this.props.postFeedbackform}/>} />\r\n              <Route exact path='/aboutus' component= {() => <About leaders = {this.props.leaders}/>} />\r\n              <Redirect to=\"/home\" />\r\n           </Switch>\r\n           </CSSTransition>\r\n          </TransitionGroup>\r\n      <Footer/>   \r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n    isLoading:true,\r\n    errMess:null,\r\n    dishes:[]\r\n}, action) =>{\r\n    switch (action.type) {\r\n\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state,isLoading:false,errMess:null,dishes:action.payload};\r\n            \r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state,isLoading:true,errMess:null,dishes:[]};\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state,isLoading:false,errMess:action.payload,dishes:[]};\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n         return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname :'',\r\n    lastname : '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: '',\r\n    message: ''\r\n}","import React ,{ Component }  from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport Main from './components/MainComponent';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {ConfigureStore} from './redux/configureStore';\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n\r\nrender() {\r\n  return (\r\n    <Provider store = {store}>\r\n    <BrowserRouter>\r\n    <div >\r\n      <Main/>\r\n    </div>\r\n    </BrowserRouter>\r\n    </Provider>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","import {createStore,combineReducers,applyMiddleware} from 'redux';\r\nimport {createForms} from 'react-redux-form';\r\nimport {Dishes} from './dishes';\r\nimport {Comments} from './comments';\r\nimport {Promotions} from './promotions';\r\nimport {Leaders} from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {InitialFeedback} from './forms';\r\n\r\nexport const ConfigureStore = () =>{\r\n    const store = createStore(\r\n    combineReducers({\r\n        dishes:Dishes,\r\n        comments:Comments,\r\n        promotions:Promotions,\r\n        leaders:Leaders,\r\n        ...createForms({\r\n         feedback:InitialFeedback\r\n        })\r\n    }),\r\n    applyMiddleware(thunk,logger)\r\n    );\r\n    return store;\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}